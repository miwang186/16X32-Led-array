C51 COMPILER V9.02   MAIN                                                                  04/17/2019 03:15:49 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: d:\Program Files\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          #include "led_array.h"
   3          
   4          /*按键*/
   5          #define KEY_ALL_PIN     P1
   6          
   7          #define PAGE_MAX_COUNT  3
   8          
   9          uint8_t code school_log_picture[] = 
  10          {
  11                  0x00,0x00,0x1E,0x3C,0x70,0x07,0x40,0x01,0x4A,0x29,0x4A,0x29,0x7A,0x2F,0x02,0x20,
  12                  0xFA,0x3F,0x02,0x20,0x7A,0x2F,0x4A,0x29,0x48,0x29,0x40,0x01,0x78,0x07,0x0E,0x3C,/*"未命名文件",0*/
  13                  0x00,0x00,0x1E,0x3C,0x70,0x07,0x40,0x01,0x4A,0x29,0x4A,0x29,0x7A,0x2F,0x02,0x20,
  14                  0xFA,0x3F,0x02,0x20,0x7A,0x2F,0x4A,0x29,0x48,0x29,0x40,0x01,0x78,0x07,0x0E,0x3C,/*"未命名文件",0*/
  15          };
  16          
  17          uint8_t code school_ch_name_font[] = 
  18          {
  19                  0x20,0x40,0x20,0xC0,0x24,0xFE,0x24,0x7E,0x24,0x40,0xA4,0x7F,0xA4,0x3F,0x24,0x22,
  20                  0x24,0x22,0xFF,0x23,0xFF,0x0F,0x22,0x1C,0x2E,0x30,0x2C,0x60,0x20,0xF8,0x20,0xF8,/*"武",0*/
  21                  0x00,0x00,0x00,0x00,0x00,0xFF,0x7F,0xFF,0x7F,0x49,0x49,0x49,0x49,0x49,0x49,0x49,
  22                  0x49,0x49,0x49,0x49,0x49,0x49,0x7F,0x49,0x7F,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,/*"昌",1*/
  23                  0x04,0x20,0x84,0x60,0x84,0x60,0xFC,0x3F,0xFC,0x1F,0x84,0x10,0x84,0x50,0xFE,0x44,
  24                  0xFE,0x44,0x92,0x44,0xFE,0x7F,0xFE,0x7F,0x92,0x44,0xFE,0x44,0xFE,0x44,0x00,0x40,/*"理",2*/
  25                  0x00,0x20,0x04,0x20,0x04,0x20,0x04,0x20,0x04,0x20,0x04,0x20,0x04,0x20,0xFC,0x3F,
  26                  0xFC,0x3F,0x04,0x20,0x04,0x20,0x04,0x20,0x04,0x20,0x04,0x20,0x04,0x20,0x00,0x20,/*"工",3*/
  27                  0x40,0x04,0x70,0x04,0x31,0x04,0x97,0x04,0x96,0x04,0x90,0x44,0x91,0xC4,0x97,0xFE,
  28                  0x96,0x7E,0x90,0x07,0x98,0x05,0x9C,0x04,0x17,0x04,0x53,0x04,0x70,0x04,0x30,0x04,/*"学",4*/
  29                  0x00,0x00,0xFE,0xFF,0xFE,0xFF,0x7A,0x0C,0xDE,0x0F,0x96,0x87,0x1C,0xC1,0x2C,0x71,
  30                  0x24,0x3F,0x25,0x0F,0x27,0x01,0x26,0x3F,0x24,0x7F,0x34,0x41,0x1C,0x71,0x0C,0x71,/*"院",5*/
  31          
  32                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  33                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  34                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  35                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  36          };
  37          
  38          uint8_t code school_en_name_font[] =
  39          {
  40          
  41                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  42                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  43                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  44                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  45                  
  46                  0x08,0x00,0xF8,0x03,0x00,0x3E,0xF8,0x01,0x00,0x3E,0xF8,0x03,0x08,0x00,0x00,0x00,/*"W",0*/
  47                  0x80,0x00,0x80,0x1F,0x00,0x20,0x00,0x20,0x00,0x20,0x80,0x10,0x80,0x3F,0x00,0x20,/*"u",1*/
  48                  0x00,0x00,0x00,0x0E,0x00,0x11,0x80,0x20,0x80,0x20,0x80,0x20,0x00,0x11,0x00,0x00,/*"c",2*/
  49                  0x10,0x20,0xF0,0x3F,0x00,0x21,0x80,0x00,0x80,0x00,0x80,0x20,0x00,0x3F,0x00,0x20,/*"h",3*/
  50                  0x00,0x00,0x00,0x19,0x80,0x24,0x80,0x24,0x80,0x12,0x00,0x3F,0x00,0x20,0x00,0x00,/*"a",4*/
  51                  0x80,0x20,0x80,0x3F,0x00,0x21,0x80,0x00,0x80,0x00,0x80,0x20,0x00,0x3F,0x00,0x20,/*"n",5*/
  52                  0x00,0x00,0x00,0x6B,0x80,0x94,0x80,0x94,0x80,0x94,0x80,0x93,0x80,0x60,0x00,0x00,/*"g",6*/
  53                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*" ",7*/
  54                  0x08,0x00,0xF8,0x1F,0x08,0x20,0x00,0x20,0x00,0x20,0x08,0x20,0xF8,0x1F,0x08,0x00,/*"U",8*/
C51 COMPILER V9.02   MAIN                                                                  04/17/2019 03:15:49 PAGE 2   

  55                  0x80,0x20,0x80,0x3F,0x00,0x21,0x80,0x00,0x80,0x00,0x80,0x20,0x00,0x3F,0x00,0x20,/*"n",9*/
  56                  0x00,0x00,0x80,0x20,0x98,0x20,0x98,0x3F,0x00,0x20,0x00,0x20,0x00,0x00,0x00,0x00,/*"i",10*/
  57                  0x80,0x00,0x80,0x03,0x80,0x0C,0x00,0x30,0x80,0x0C,0x80,0x03,0x80,0x00,0x00,0x00,/*"v",11*/
  58                  0x00,0x00,0x00,0x1F,0x80,0x24,0x80,0x24,0x80,0x24,0x80,0x24,0x00,0x17,0x00,0x00,/*"e",12*/
  59                  0x80,0x20,0x80,0x20,0x80,0x3F,0x00,0x21,0x80,0x20,0x80,0x00,0x80,0x01,0x00,0x00,/*"r",13*/
  60                  0x00,0x00,0x00,0x33,0x80,0x24,0x80,0x24,0x80,0x24,0x80,0x24,0x80,0x19,0x00,0x00,/*"s",14*/
  61                  0x00,0x00,0x80,0x20,0x98,0x20,0x98,0x3F,0x00,0x20,0x00,0x20,0x00,0x00,0x00,0x00,/*"i",15*/
  62                  0x00,0x00,0x80,0x00,0x80,0x00,0xE0,0x1F,0x80,0x20,0x80,0x20,0x00,0x10,0x00,0x00,/*"t",16*/
  63                  0x80,0x00,0x80,0x81,0x80,0x86,0x00,0x78,0x00,0x18,0x80,0x06,0x80,0x01,0x80,0x00,/*"y",17*/
  64                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*" ",18*/
  65                  0x00,0x00,0x00,0x1F,0x80,0x20,0x80,0x20,0x80,0x20,0x80,0x20,0x00,0x1F,0x00,0x00,/*"o",19*/
  66                  0x00,0x00,0x80,0x20,0x80,0x20,0xE0,0x3F,0x90,0x20,0x90,0x20,0x20,0x00,0x00,0x00,/*"f",20*/
  67                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*" ",21*/
  68                  0x18,0x00,0x08,0x00,0x08,0x20,0xF8,0x3F,0x08,0x20,0x08,0x00,0x18,0x00,0x00,0x00,/*"T",22*/
  69                  0x00,0x00,0x00,0x1F,0x80,0x24,0x80,0x24,0x80,0x24,0x80,0x24,0x00,0x17,0x00,0x00,/*"e",23*/
  70                  0x00,0x00,0x00,0x0E,0x00,0x11,0x80,0x20,0x80,0x20,0x80,0x20,0x00,0x11,0x00,0x00,/*"c",24*/
  71                  0x10,0x20,0xF0,0x3F,0x00,0x21,0x80,0x00,0x80,0x00,0x80,0x20,0x00,0x3F,0x00,0x20,/*"h",25*/
  72                  0x80,0x20,0x80,0x3F,0x00,0x21,0x80,0x00,0x80,0x00,0x80,0x20,0x00,0x3F,0x00,0x20,/*"n",26*/
  73                  0x00,0x00,0x00,0x1F,0x80,0x20,0x80,0x20,0x80,0x20,0x80,0x20,0x00,0x1F,0x00,0x00,/*"o",27*/
  74                  0x00,0x00,0x10,0x20,0x10,0x20,0xF8,0x3F,0x00,0x20,0x00,0x20,0x00,0x00,0x00,0x00,/*"l",28*/
  75                  0x00,0x00,0x00,0x1F,0x80,0x20,0x80,0x20,0x80,0x20,0x80,0x20,0x00,0x1F,0x00,0x00,/*"o",29*/
  76                  0x00,0x00,0x00,0x6B,0x80,0x94,0x80,0x94,0x80,0x94,0x80,0x93,0x80,0x60,0x00,0x00,/*"g",30*/
  77                  0x80,0x00,0x80,0x81,0x80,0x86,0x00,0x78,0x00,0x18,0x80,0x06,0x80,0x01,0x80,0x00,/*"y",31*/
  78          
  79          };
  80          
  81          typedef struct 
  82          {
  83                  uint8_t *page_p;
  84                  uint16_t byte_size;
  85          }Page_Directory;
  86          
  87          Page_Directory code page_directory[PAGE_MAX_COUNT] = 
  88          {
  89                  {school_ch_name_font,sizeof(school_ch_name_font)},
  90                  {school_en_name_font,sizeof(school_en_name_font)},
  91                  {school_log_picture,sizeof(school_log_picture)},        
  92          };
  93          static uint16_t move_level_index = 0;   //水平移动索引
  94          static int8_t move_vertical_index = 0; //垂直移动索引
  95          
  96          static uint8_t display_move_speed = 50; //移动速度
  97          static uint8_t current_page_index = 0;  //当前页面的索引
  98          static uint8_t current_button_value = 0;
  99          
 100          bit level_move_enable   = 1; //水平移动开关使能 
 101          bit vertical_move_enable = 0; //垂直移动开关使能
 102          
 103          bit level_move_direction = 0;   //0从左到右 1从右到左 
 104          bit vertical_move_direction = 0;//0从下到上 1从上到下 
 105          
 106          void IO_Init()
 107          {
 108   1              SH_CP_PIN = 0;
 109   1              DS_PIN = 0;
 110   1              ST_CP_PIN = 0;
 111   1              
 112   1              HC154_ABCD_PIN = 0;
 113   1              
 114   1              KEY_ALL_PIN = 0xff;
 115   1      }
 116          
C51 COMPILER V9.02   MAIN                                                                  04/17/2019 03:15:49 PAGE 3   

 117          void Timer0Init(void)   //1毫秒@12.000MHz
 118          {
 119   1              EA = 1;                         //开启总中断
 120   1      
 121   1              AUXR &= 0x7F;           //定时器时钟12T模式
 122   1              TMOD &= 0xF0;           //设置定时器模式
 123   1              TMOD |= 0x01;           //设置定时器模式
 124   1              TL0 = 0x18;                     //设置定时初值
 125   1              TH0 = 0xFC;                     //设置定时初值
 126   1              ET0 = 1;                        //开启定时器中断
 127   1              TF0 = 0;                        //清除TF0标志
 128   1              TR0 = 1;                        //定时器0开始计时
 129   1      }
 130          
 131          /*按键处理过程*/
 132          void key_process()
 133          {
 134   1              if(current_button_value == 0)
 135   1              {
 136   2                      return ;
 137   2              }
 138   1              
 139   1              if((current_button_value & 0x01))
 140   1              {
 141   2                      move_level_index = 0;
 142   2                      move_vertical_index = 0;
 143   2                      level_move_enable = 1;
 144   2                      vertical_move_enable = 0;
 145   2                      
 146   2                      current_page_index++;
 147   2                      if(current_page_index >= PAGE_MAX_COUNT)
 148   2                      {
 149   3                              current_page_index = 0;
 150   3                      }
 151   2              }
 152   1              
 153   1              if((current_button_value & 0x02))
 154   1              {
 155   2                      display_move_speed -= 20;
 156   2                      display_move_speed &= 127;
 157   2              }
 158   1      
 159   1              if((current_button_value & 0x04))
 160   1              {
 161   2                      level_move_direction = ~level_move_direction;
 162   2              }
 163   1              
 164   1              if((current_button_value & 0x08))
 165   1              {
 166   2                      level_move_enable = ~level_move_enable;
 167   2              }
 168   1      
 169   1              if((current_button_value & 0x10))
 170   1              {
 171   2                      vertical_move_direction = ~vertical_move_direction;
 172   2              }
 173   1              
 174   1              if((current_button_value & 0x20))
 175   1              {
 176   2                      vertical_move_enable = ~vertical_move_enable;
 177   2              }
 178   1              current_button_value = 0;
C51 COMPILER V9.02   MAIN                                                                  04/17/2019 03:15:49 PAGE 4   

 179   1      }
 180          
 181          /*按键扫描*/
 182          void key_scan()
 183          {
 184   1              static uint8_t last_key_value = 0xff;
 185   1              uint8_t current_key_value = P1;
 186   1              
 187   1              if(current_key_value == last_key_value) //没有按键按下 或者按键没有松开
 188   1              {
 189   2                      return ;
 190   2              }
 191   1              if(current_key_value == 0xff)
 192   1                      current_button_value = current_key_value - last_key_value;
 193   1              last_key_value = current_key_value;     
 194   1      }
 195          
 196          void main()
 197          {
 198   1              IO_Init();
 199   1              Timer0Init();
 200   1              while(1)
 201   1              {
 202   2                      key_process();
 203   2              }
 204   1      }
 205          
 206          void Time0interrupt() interrupt 1
 207          {
 208   1              static uint8_t time_index = 0;
 209   1              const uint8_t *picture_data = page_directory[current_page_index].page_p + move_level_index * ROW_BYTE;
 210   1      
 211   1              TL0 = 0x18;             //设置定时初值
 212   1              TH0 = 0xFC;             //设置定时初值
 213   1              
 214   1              led_picture_scan(picture_data,move_vertical_index);
 215   1              
 216   1              key_scan();
 217   1              
 218   1              time_index++;
 219   1              
 220   1              if(time_index >= display_move_speed)
 221   1              {       
 222   2                      time_index = 0;
 223   2              
 224   2                      if(level_move_enable)
 225   2                      {
 226   3                              if(level_move_direction)
 227   3                                      move_level_index--;
 228   3                              else
 229   3                                      move_level_index++; 
 230   3                      }
 231   2      
 232   2                      if(move_level_index > page_directory[current_page_index].byte_size / ROW_BYTE - COLUMN_MAX)
 233   2                      {
 234   3                              if(level_move_direction)
 235   3                                      move_level_index = page_directory[current_page_index].byte_size / ROW_BYTE - COLUMN_MAX - 1;
 236   3                              else
 237   3                                      move_level_index = 0;
 238   3                      }               
 239   2                      
 240   2                      if(vertical_move_enable)
C51 COMPILER V9.02   MAIN                                                                  04/17/2019 03:15:49 PAGE 5   

 241   2                      {
 242   3                              if(vertical_move_direction)
 243   3                                      move_vertical_index--;
 244   3                              else
 245   3                                      move_vertical_index++;                  
 246   3                      }
 247   2                      
 248   2                      if(move_vertical_index > ROW_MAX || move_vertical_index < -ROW_MAX)
 249   2                      {
 250   3                              move_vertical_index = 0;
 251   3                      }
 252   2              }
 253   1              
 254   1      
 255   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =    911    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
